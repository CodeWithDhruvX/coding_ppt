{
    "summarize": {
      "title": "English Prompt",
      "prompt": "Generate structured JSON data for the topic: <Your Topic Here>. \n\nUse the following format for each slide:\n\n[\n  {\n    \"title\": \"<Slide Title>\",\n    \"content\": \"<Formatted content in markdown if text or raw if code>\",\n    \"slide_type\": \"text | code | table\"\n  }\n]\n\nRules:\n1. Use slide_type as one of text, code, or table.\n2. Use Markdown formatting in content for text slides.\n3. Keep code examples in content for code slides with proper formatting.\n4. For table slides, provide a JSON array of objects representing rows.\n5. Keep titles concise and meaningful.\n6. Each JSON object should represent one slide.\n7. Ensure content is beginner-friendly, structured, and informative."
    },
    "quiz_summarize": {
      "title": "Quiz Summarize English Prompt Text",
      "prompt": "Generate structured JSON data for the topic: What are pointers in Go?\n\nUse the following format for each slide:\n\n[\n  {\n    \"title\": \"<Slide Title>\",\n    \"content\": \"<Formatted content in markdown if text or raw if code>\",\n    \"slide_type\": \"text | code | table\"\n  }\n]\n\nRules:\n1. Use slide_type as one of text, code, or table.\n2. Use Markdown formatting in content for text slides.\n3. Keep code examples in content for code slides with proper formatting.\n4. For table slides, provide a JSON array of objects representing rows.\n5. Keep titles concise and meaningful.\n6. Each JSON object should represent one slide.\n7. Ensure content is beginner-friendly, structured, and informative.\n8. Make it even more visual or interactive (e.g., quizzes, small challenges).\n\nAfter generating the structured JSON array for the topic slides, append two additional slides at the end:\n\nFirst, add a **Quiz/Challenge Slide**:\n{\n  \"title\": \"Quick Challenge: Test Your Understanding\",\n  \"content\": \"- **Question:** What operator is used to get the address of a variable in Go?\\n- **Question:** How do you dereference a pointer to get the value?\\n\\n*Tip: Try writing a small program to answer these!*\",\n  \"slide_type\": \"text\"\n}\n\nRules for the challenge slide:\n- Always place it immediately after the topic slides.\n- Use simple and clear questions.\n- Make it friendly and beginner-focused.\n- Format questions in Markdown.\n\nThen, add a **Solution Slide**:\n{\n  \"title\": \"Solutions: Quick Challenge\",\n  \"content\": \"- **Answer 1:** Use the `&` operator to get the address of a variable.\\n- **Answer 2:** Use the `*` operator to dereference a pointer and get its value.\\n\\nExample:\\n```go\\nvar x int = 10\\nvar p *int = &x\\nfmt.Println(*p) // Prints 10\\n```\",\n  \"slide_type\": \"code\"\n}\n\nRules for the solution slide:\n- Always immediately follow the challenge slide.\n- Provide direct, clear answers.\n- Include short and beginner-friendly explanations.\n- Use code examples when relevant."
    },
    "slide_text": {
      "title": "Slide Type Text",
      "prompt": "add depth information in the content where slide_type is text. "
    },
    "slide_code": {
      "title": "Slide Type Code",
      "prompt": "add depth information in the content where slide_type is code"
    },
    "slide_hindi_language":{
      "title": "Slide Hindi Language",
      "prompt": "Convert this text into Hindi where most of the explanation is in Hindi, but key technical terms or concepts should remain in English."
    }
  }
  