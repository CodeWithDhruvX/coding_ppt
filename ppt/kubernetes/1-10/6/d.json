[
  {
    "title": "Kubernetes Namespaces का परिचय",
    "content": "### क्या है Namespace?\n- Kubernetes में `Namespace` एक virtual क्लस्टर की तरह होता है।\n- यह एक ही physical cluster में multiple environments (जैसे dev, staging, prod) को isolate करने के लिए उपयोग होता है।\n- `kubectl get namespaces` से available namespaces देख सकते हैं।",
    "slide_type": "text"
  },
  {
    "title": "Namespace बनाने का Code",
    "content": "```yaml\napiVersion: v1\nkind: Namespace\nmetadata:\n  name: dev-environment\n```\n### Command:\n```bash\nkubectl apply -f namespace.yaml\n```",
    "slide_type": "code"
  },
  {
    "title": "Resource Isolation का Concept",
    "content": "### क्यों ज़रूरी है Isolation?\n- अलग-अलग टीमों के लिए अलग-अलग `Namespaces` बनाना सुरक्षित होता है।\n- इससे resource conflicts से बचा जा सकता है।\n- आप same name वाले pods अलग-अलग namespaces में रख सकते हैं।",
    "slide_type": "text"
  },
  {
    "title": "Resource Access Namespace के साथ",
    "content": "```bash\nkubectl get pods --namespace=dev-environment\nkubectl create deployment nginx --image=nginx --namespace=dev-environment\n```",
    "slide_type": "code"
  },
  {
    "title": "Default Namespace का Role",
    "content": "### Default Namespace:\n- अगर आप कोई namespace specify नहीं करते, तो Kubernetes `default` namespace use करता है।\n- Example: `kubectl get pods` का मतलब है `kubectl get pods --namespace=default`",
    "slide_type": "text"
  },
  {
    "title": "Namespaces List और Context Switch",
    "content": "```bash\nkubectl get namespaces\nkubectl config set-context --current --namespace=dev-environment\nkubectl config view --minify | grep namespace\n```",
    "slide_type": "code"
  },
  {
    "title": "Quick Challenge: Test Your Understanding",
    "content": "### नीचे दिए गए प्रश्नों के उत्तर दीजिए:\n\n**Q1.** `Namespace` का मुख्य उपयोग क्या है?\n- A) Logs collect करने के लिए  \n- B) Cluster में isolation create करने के लिए  \n- C) Load balancing के लिए  \n- D) Docker images build करने के लिए\n\n**Q2.** `default` namespace किस स्थिति में use होता है?\n- A) जब आप pod create कर रहे हैं with `--namespace`  \n- B) जब आप explicitly `namespace` नहीं देते  \n- C) जब cluster restart होता है  \n- D) जब pod crash हो जाता है\n\n**Q3.** नीचे दिए गए YAML का output क्या होगा?\n```yaml\napiVersion: v1\nkind: Namespace\nmetadata:\n  name: test-env\n```\n- A) Pod create होगा  \n- B) Deployment बनेगा  \n- C) Namespace create होगा  \n- D) Error आएगा\n\n**Q4.** Namespace switch करने के लिए कौन सा command सही है?\n- A) `kubectl config use-context`  \n- B) `kubectl get context`  \n- C) `kubectl config set-context --current --namespace=dev`  \n- D) `kubectl switch ns`",
    "slide_type": "text"
  },
  {
    "title": "Solutions: Quick Challenge",
    "content": "### उत्तर:\n\n**Q1 Answer:** B\n> Namespace isolation प्रदान करता है जिससे multi-team setup में conflicts नहीं होते।\n\n**Q2 Answer:** B\n> यदि आप कोई `--namespace` नहीं देते, तो Kubernetes `default` namespace use करता है।\n\n**Q3 Answer:** C\n> यह YAML एक नया Namespace `test-env` create करता है।\n\n**Q4 Answer:** C\n> यह command current context में namespace switch करता है।",
    "slide_type": "code"
  }
]
